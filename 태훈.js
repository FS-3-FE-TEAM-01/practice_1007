export function taehoon(hello) {
  for (let i = 0; i < 100; i++) {
    if (i % 2 === 0) { 
      hello();
      hello(); 
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
      hello();
    }
  }
}
 






